name: "CI: Tag & Build"

on:
  push: # On pushes of tags for 'main'
    branches:
      - 'main'
    tags:
      - 'v*'
  schedule: # At 03:30 on every 15th.
    - cron: "30 3 15 * *"
  workflow_dispatch: {} # Allow manual activation

jobs:
  Tag-n-Build:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: repo_name
        name: Get repo name
        uses: Entepotenz/change-string-case-action-min-dependencies@v1
        with:
          string: ${{ github.repository }}

      ## Add step(s) to create labels & tags
      # if built from main branch - tag as latest else tags as branch latest
      # add label for build date.
      ## Use values on push

      - name: Set current date as env variable
        run: |
          echo "BUILD_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # images: ${{ steps.repo_name.outputs.lowercase }}
          images: |
            name/app
            ${{ steps.repo_name.outputs.lowercase }}
          # labels:
          tags:
            type=ref,event=branch
            type=ref,event=pr
            type=schedule,pattern={{date 'YYYY.MM.DD-hh:mm' tz='America/El_Salvador'}}
            type=sha

      - name: Check meta output
        run: |
          echo "tags: ${{ steps.meta.outputs.tags }}"
          echo "labels: ${{ steps.meta.outputs.labels }}"

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # # https://github.com/docker/build-push-action
      # - name: Build and push image [main]
      #   uses: docker/build-push-action@v6
      #   env:
      #     SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
      #   with:
      #     push: true
      #     labels: ${{ steps.meta.outputs.labels }}
      #     tags: ${{ steps.meta.outputs.tags }}
